/* Given a non-empty, singly linked list with head node head, return a middle node of linked list.
If there are two middle nodes, return the second middle node.
*/

Solution:-


class Solution {
public:
    ListNode* middleNode(ListNode* head) {                                          // Slow-Fast Pointer Concept
        ListNode *p=head;
        ListNode *q=head;
        while(p && p->next)
        {
            p=p->next->next;
            q=q->next;
        }
        return q;
    }
};
